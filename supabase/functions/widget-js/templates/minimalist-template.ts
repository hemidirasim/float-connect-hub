import type { WidgetTemplate } from '../template-types.ts'

export function getMinimalistTemplate(): WidgetTemplate {
  return {
    id: 'minimalist',
    name: 'Minimalist',
    description: 'Simple icons-only design with hover tooltips',
    html: `
      <div class="minimalist-widget-container position-{{POSITION}}" id="minimalist-widget-container">
        <div class="minimalist-channels-list" id="minimalist-channels-list">
          <!-- Channels will be generated by JavaScript -->
        </div>
        <button class="minimalist-main-button" id="minimalist-main-button" style="background: {{BUTTON_COLOR}}; width: {{BUTTON_SIZE}}px; height: {{BUTTON_SIZE}}px;">
          {{BUTTON_ICON}}
        </button>
        <div class="minimalist-tooltip position-{{TOOLTIP_POSITION}} {{TOOLTIP_DISPLAY}}" id="minimalist-tooltip">
          {{TOOLTIP_TEXT}}
        </div>
      </div>
    `,
    css: `
      .minimalist-widget-container {
        position: fixed;
        z-index: 9999;
        font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', system-ui, sans-serif;
        bottom: 20px;
      }

      .minimalist-widget-container.position-right {
        right: 20px;
      }

      .minimalist-widget-container.position-left {
        left: 20px;
      }

      .minimalist-main-button {
        border-radius: 50%;
        border: none;
        cursor: pointer;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 24px;
        color: white;
        box-shadow: 0 4px 20px rgba(0, 0, 0, 0.15);
        transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
        position: relative;
        z-index: 10001;
      }

      .minimalist-main-button:hover {
        transform: translateY(-2px) scale(1.05);
        box-shadow: 0 8px 30px rgba(0, 0, 0, 0.2);
      }

      .minimalist-main-button.active {
        transform: rotate(45deg);
        background: #ff4444 !important;
      }

      .minimalist-channels-list {
        position: absolute;
        bottom: calc({{BUTTON_SIZE}}px + 15px);
        display: flex;
        flex-direction: column;
        gap: 12px;
        opacity: 0;
        visibility: hidden;
        transform: translateY(20px);
        transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
        z-index: 10000;
        align-items: center;
      }

      .minimalist-channels-list.show {
        opacity: 1;
        visibility: visible;
        transform: translateY(0);
      }

      .minimalist-channel-btn {
        width: 50px;
        height: 50px;
        border-radius: 50%;
        border: none;
        cursor: pointer;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 20px;
        color: white;
        text-decoration: none;
        box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
        transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
        position: relative;
        transform: scale(0) translateY(20px);
        opacity: 0;
      }

      .minimalist-channels-list.show .minimalist-channel-btn {
        transform: scale(1) translateY(0);
        opacity: 1;
      }

      .minimalist-channels-list.show .minimalist-channel-btn:nth-child(1) {
        transition-delay: 0.1s;
      }

      .minimalist-channels-list.show .minimalist-channel-btn:nth-child(2) {
        transition-delay: 0.2s;
      }

      .minimalist-channels-list.show .minimalist-channel-btn:nth-child(3) {
        transition-delay: 0.3s;
      }

      .minimalist-channels-list.show .minimalist-channel-btn:nth-child(4) {
        transition-delay: 0.4s;
      }

      .minimalist-channels-list.show .minimalist-channel-btn:nth-child(5) {
        transition-delay: 0.5s;
      }

      .minimalist-channels-list.show .minimalist-channel-btn:nth-child(6) {
        transition-delay: 0.6s;
      }

      .minimalist-channel-btn:hover {
        transform: translateY(-3px) scale(1.1);
        box-shadow: 0 8px 25px rgba(0, 0, 0, 0.2);
      }

      /* Platform colors */
      .minimalist-channel-btn[data-type="whatsapp"] { background: #25d366; }
      .minimalist-channel-btn[data-type="telegram"] { background: #0088cc; }
      .minimalist-channel-btn[data-type="instagram"] { background: #e4405f; }
      .minimalist-channel-btn[data-type="messenger"] { background: #0084ff; }
      .minimalist-channel-btn[data-type="viber"] { background: #665cac; }
      .minimalist-channel-btn[data-type="skype"] { background: #00aff0; }
      .minimalist-channel-btn[data-type="discord"] { background: #5865f2; }
      .minimalist-channel-btn[data-type="tiktok"] { background: #000000; }
      .minimalist-channel-btn[data-type="youtube"] { background: #ff0000; }
      .minimalist-channel-btn[data-type="facebook"] { background: #1877f2; }
      .minimalist-channel-btn[data-type="twitter"] { background: #1da1f2; }
      .minimalist-channel-btn[data-type="linkedin"] { background: #0077b5; }
      .minimalist-channel-btn[data-type="github"] { background: #333333; }
      .minimalist-channel-btn[data-type="website"] { background: #6b7280; }
      .minimalist-channel-btn[data-type="chatbot"] { background: #8b5cf6; }
      .minimalist-channel-btn[data-type="email"] { background: #ea4335; }
      .minimalist-channel-btn[data-type="phone"] { background: #34d399; }
      .minimalist-channel-btn[data-type="custom"] { background: #6b7280; }

      /* Channel name tooltip */
      .minimalist-channel-btn .channel-name {
        position: absolute;
        left: -10px;
        transform: translateX(-100%);
        background: rgba(0, 0, 0, 0.8);
        color: white;
        padding: 6px 10px;
        border-radius: 6px;
        font-size: 12px;
        white-space: nowrap;
        opacity: 0;
        visibility: hidden;
        transition: all 0.2s ease;
        pointer-events: none;
      }

      .minimalist-widget-container.position-left .minimalist-channel-btn .channel-name {
        left: auto;
        right: -10px;
        transform: translateX(100%);
      }

      .minimalist-channel-btn:hover .channel-name {
        opacity: 1;
        visibility: visible;
      }

      /* Tooltip */
      .minimalist-tooltip {
        position: absolute;
        background: rgba(0, 0, 0, 0.8);
        color: white;
        padding: 8px 12px;
        border-radius: 8px;
        font-size: 14px;
        white-space: nowrap;
        pointer-events: none;
        opacity: 0;
        transition: opacity 0.3s ease;
        z-index: 10003;
      }

      .minimalist-tooltip.show, .minimalist-tooltip.always {
        opacity: 1;
      }

      .minimalist-tooltip.position-top {
        bottom: calc(100% + 10px);
        left: 50%;
        transform: translateX(-50%);
      }

      .minimalist-tooltip.position-bottom {
        top: calc(100% + 10px);
        left: 50%;
        transform: translateX(-50%);
      }

      .minimalist-tooltip.position-left {
        right: calc(100% + 10px);
        top: 50%;
        transform: translateY(-50%);
      }

      .minimalist-tooltip.position-right {
        left: calc(100% + 10px);
        top: 50%;
        transform: translateY(-50%);
      }

      @media (max-width: 768px) {
        .minimalist-widget-container {
          right: 15px !important;
          left: auto !important;
          bottom: 15px !important;
        }
        
        .minimalist-channel-btn .channel-name {
          left: auto;
          right: -10px;
          transform: translateX(100%);
        }
      }
    `,
    js: `
      (function() {
        console.log('Minimalist widget JavaScript loading...');
        
        let isMenuOpen = false;
        
        function initWidget() {
          console.log("Initializing minimalist widget...");
          
          const button = document.getElementById('minimalist-main-button');
          const channelsList = document.getElementById('minimalist-channels-list');
          const tooltip = document.getElementById('minimalist-tooltip');
          const container = document.getElementById('minimalist-widget-container');
          
          if (!button || !channelsList || !container) {
            console.error('Widget elements not found:', { 
              button: !!button, 
              channelsList: !!channelsList,
              container: !!container
            });
            return;
          }

          console.log('Found widget elements:', { 
            button: !!button, 
            channelsList: !!channelsList, 
            tooltip: !!tooltip 
          });

          // Generate channels
          generateChannels();

          // Button click handler
          button.addEventListener('click', function(e) {
            e.preventDefault();
            e.stopPropagation();
            console.log("Widget button clicked, current state:", isMenuOpen);
            toggleMenu();
          });

          // Tooltip functionality
          if (tooltip) {
            const tooltipDisplay = '{{TOOLTIP_DISPLAY}}';
            
            if (tooltipDisplay === 'hover') {
              button.addEventListener('mouseenter', function() {
                if (!isMenuOpen) {
                  tooltip.classList.add('show');
                }
              });
              
              button.addEventListener('mouseleave', function() {
                tooltip.classList.remove('show');
              });
            } else if (tooltipDisplay === 'always') {
              tooltip.classList.add('always');
            }
          }

          // Close menu when clicking outside
          document.addEventListener('click', function(e) {
            if (!e.target.closest('.minimalist-widget-container')) {
              closeMenu();
            }
          });
          
          console.log('Minimalist widget initialized successfully');
        }

        function generateChannels() {
          const channelsList = document.getElementById('minimalist-channels-list');
          if (!channelsList) return;
          
          const channelsData = {{CHANNELS_DATA}};
          if (!channelsData || !channelsData.length) {
            console.log('No channels data available');
            return;
          }
          
          let html = '';
          
          channelsData.forEach(channel => {
            const channelUrl = getChannelUrl(channel);
            const channelIcon = getChannelIcon(channel);
            
            html += '<a href="' + escapeHtml(channelUrl) + '" target="_blank" ';
            html += 'class="minimalist-channel-btn" data-type="' + escapeHtml(channel.type) + '" ';
            html += 'onclick="window.openChannel && window.openChannel(\'' + escapeHtml(channelUrl) + '\'); return false;">';
            html += channelIcon;
            html += '<span class="channel-name">' + escapeHtml(channel.label) + '</span>';
            html += '</a>';
          });
          
          channelsList.innerHTML = html;
        }

        function getChannelUrl(channel) {
          switch (channel.type) {
            case 'whatsapp':
              return 'https://wa.me/' + channel.value.replace(/\\D/g, '');
            case 'telegram':
              return 'https://t.me/' + channel.value.replace('@', '');
            case 'email':
              return 'mailto:' + channel.value;
            case 'phone':
              return 'tel:' + channel.value;
            case 'instagram':
              return channel.value.startsWith('http') ? channel.value : 'https://instagram.com/' + channel.value.replace('@', '');
            case 'facebook':
              return channel.value.startsWith('http') ? channel.value : 'https://facebook.com/' + channel.value;
            case 'twitter':
              return channel.value.startsWith('http') ? channel.value : 'https://twitter.com/' + channel.value.replace('@', '');
            case 'linkedin':
              return channel.value.startsWith('http') ? channel.value : 'https://linkedin.com/in/' + channel.value;
            default:
              return channel.value.startsWith('http') ? channel.value : 'https://' + channel.value;
          }
        }

        function getChannelIcon(channel) {
          if (channel.customIcon) {
            return '<img src="' + channel.customIcon + '" style="width: 24px; height: 24px;" alt="' + channel.type + '">';
          }

          const icons = {
            whatsapp: '<svg width="24" height="24" fill="white" viewBox="0 0 24 24"><path d="M17.472 14.382c-.297-.149-1.758-.867-2.03-.967-.273-.099-.471-.148-.67.15-.197.297-.767.966-.94 1.164-.173.199-.347.223-.644.075-.297-.15-1.255-.463-2.39-1.475-.883-.788-1.48-1.761-1.653-2.059-.173-.297-.018-.458.13-.606.134-.133.298-.347.446-.52.149-.174.198-.298.298-.497.099-.198.05-.371-.025-.52-.075-.149-.669-1.612-.916-2.207-.242-.579-.487-.5-.669-.51-.173-.008-.371-.01-.57-.01-.198 0-.52.074-.792.372-.272.297-1.04 1.016-1.04 2.479 0 1.462 1.065 2.875 1.213 3.074.149.198 2.096 3.2 5.077 4.487.709.306 1.262.489 1.694.625.712.227 1.36.195 1.871.118.571-.085 1.758-.719 2.006-1.413.248-.694.248-1.289.173-1.413-.074-.124-.272-.198-.57-.347m-5.421 7.403h-.004a9.87 9.87 0 01-5.031-1.378l-.361-.214-3.741.982.998-3.648-.235-.374a9.86 9.86 0 01-1.51-5.26c.001-5.45 4.436-9.884 9.888-9.884 2.64 0 5.122 1.03 6.988 2.898a9.825 9.825 0 012.893 6.994c-.003 5.45-4.437 9.884-9.885 9.884m8.413-18.297A11.815 11.815 0 0012.05 0C5.495 0 .16 5.335.157 11.892c0 2.096.547 4.142 1.588 5.945L.057 24l6.305-1.654a11.882 11.882 0 005.683 1.448h.005c6.554 0 11.890-5.335 11.893-11.893A11.821 11.821 0 0020.465 3.516"/></svg>',
            telegram: '<svg width="24" height="24" fill="white" viewBox="0 0 24 24"><path d="M11.944 0A12 12 0 0 0 0 12a12 12 0 0 0 12 12 12 12 0 0 0 12-12A12 12 0 0 0 12 0a12 12 0 0 0-.056 0zm4.962 7.224c.1-.002.321.023.465.14a.506.506 0 0 1 .171.325c.016.093.036.306.02.472-.18 1.898-.962 6.502-1.36 8.627-.168.9-.499 1.201-.82 1.23-.696.065-1.225-.46-1.9-.902-1.056-.693-1.653-1.124-2.678-1.8-1.185-.78-.417-1.21.258-1.91.177-.184 3.247-2.977 3.307-3.23.007-.032.014-.15-.056-.212s-.174-.041-.249-.024c-.106.024-1.793 1.14-5.061 3.345-.48.33-.913.49-1.302.48-.428-.008-1.252-.241-1.865-.44-.752-.245-1.349-.374-1.297-.789.027-.216.325-.437.893-.663 3.498-1.524 5.83-2.529 6.998-3.014 3.332-1.386 4.025-1.627 4.476-1.635z"/></svg>',
            phone: '<svg width="24" height="24" fill="white" viewBox="0 0 24 24"><path d="M6.62 10.79c1.44 2.83 3.76 5.14 6.59 6.59l2.2-2.2c.27-.27.67-.36 1.02-.24 1.12.37 2.33.57 3.57.57.55 0 1 .45 1 1V20c0 .55-.45 1-1 1-9.39 0-17-7.61-17-17 0-.55.45-1 1-1h3.5c.55 0 1 .45 1 1 0 1.25.2 2.45.57 3.57.11.35.03.74-.25 1.02l-2.2 2.2z"/></svg>',
            email: '<svg width="24" height="24" fill="white" viewBox="0 0 24 24"><path d="M20 4H4c-1.1 0-1.99.9-1.99 2L2 18c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zm0 4l-8 5-8-5V6l8 5 8-5v2z"/></svg>',
            instagram: '<svg width="24" height="24" fill="white" viewBox="0 0 24 24"><path d="M12 2.163c3.204 0 3.584.012 4.85.07 3.252.148 4.771 1.691 4.919 4.919.058 1.265.069 1.645.069 4.849 0 3.205-.012 3.584-.069 4.849-.149 3.225-1.664 4.771-4.919 4.919-1.266.058-1.644.07-4.85.07-3.204 0-3.584-.012-4.849-.07-3.26-.149-4.771-1.699-4.919-4.92-.058-1.265-.07-1.644-.07-4.849 0-3.204.013-3.583.07-4.849.149-3.227 1.664-4.771 4.919-4.919 1.266-.057 1.645-.069 4.849-.069zm0-2.163c-3.259 0-3.667.014-4.947.072-4.358.2-6.78 2.618-6.98 6.98-.059 1.281-.073 1.689-.073 4.948 0 3.259.014 3.668.072 4.948.2 4.358 2.618 6.78 6.98 6.98 1.281.058 1.689.072 4.948.072 3.259 0 3.668-.014 4.948-.072 4.354-.2 6.782-2.618 6.979-6.98.059-1.28.073-1.689.073-4.948 0-3.259-.014-3.667-.072-4.947-.196-4.354-2.617-6.78-6.979-6.98-1.281-.059-1.69-.073-4.949-.073zm0 5.838c-3.403 0-6.162 2.759-6.162 6.162s2.759 6.163 6.162 6.163 6.162-2.759 6.162-6.163c0-3.403-2.759-6.162-6.162-6.162zm0 10.162c-2.209 0-4-1.79-4-4 0-2.209 1.791-4 4-4s4 1.791 4 4c0 2.21-1.791 4-4 4zm6.406-11.845c-.796 0-1.441.645-1.441 1.44s.645 1.44 1.441 1.44c.795 0 1.439-.645 1.439-1.44s-.644-1.44-1.439-1.44z"/></svg>',
            facebook: '<svg width="24" height="24" fill="white" viewBox="0 0 24 24"><path d="M24 12.073c0-6.627-5.373-12-12-12s-12 5.373-12 12c0 5.99 4.388 10.954 10.125 11.854v-8.385H7.078v-3.47h3.047V9.43c0-3.007 1.792-4.669 4.533-4.669 1.312 0 2.686.235 2.686.235v2.953H15.83c-1.491 0-1.956.925-1.956 1.874v2.25h3.328l-.532 3.47h-2.796v8.385C19.612 23.027 24 18.062 24 12.073z"/></svg>',
            twitter: '<svg width="24" height="24" fill="white" viewBox="0 0 24 24"><path d="M23.953 4.57a10 10 0 01-2.825.775 4.958 4.958 0 002.163-2.723c-.951.555-2.005.959-3.127 1.184a4.92 4.92 0 00-8.384 4.482C7.69 8.095 4.067 6.13 1.64 3.162a4.822 4.822 0 00-.666 2.475c0 1.71.87 3.213 2.188 4.096a4.904 4.904 0 01-2.228-.616v.06a4.923 4.923 0 003.946 4.827 4.996 4.996 0 01-2.212.085 4.936 4.936 0 004.604 3.417 9.867 9.867 0 01-6.102 2.105c-.39 0-.779-.023-1.17-.067a13.995 13.995 0 007.557 2.209c9.053 0 13.998-7.496 13.998-13.985 0-.21 0-.42-.015-.63A9.935 9.935 0 0024 4.59z"/></svg>',
            linkedin: '<svg width="24" height="24" fill="white" viewBox="0 0 24 24"><path d="M20.447 20.452h-3.554v-5.569c0-1.328-.027-3.037-1.852-3.037-1.853 0-2.136 1.445-2.136 2.939v5.667H9.351V9h3.414v1.561h.046c.477-.9 1.637-1.85 3.37-1.85 3.601 0 4.267 2.37 4.267 5.455v6.286zM5.337 7.433c-1.144 0-2.063-.926-2.063-2.065 0-1.138.92-2.063 2.063-2.063 1.14 0 2.064.925 2.064 2.063 0 1.139-.925 2.065-2.064 2.065zm1.782 13.019H3.555V9h3.564v11.452zM22.225 0H1.771C.792 0 0 .774 0 1.729v20.542C0 23.227.792 24 1.771 24h20.451C23.2 24 24 23.227 24 22.271V1.729C24 .774 23.2 0 22.222 0h.003z"/></svg>',
            website: '<svg width="24" height="24" fill="white" viewBox="0 0 24 24"><path d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-1 17.93c-3.94-.49-7-3.85-7-7.93 0-.62.08-1.21.21-1.79L9 15v1c0 1.1.9 2 2 2v1.93zm6.9-2.54c-.26-.81-1-1.39-1.9-1.39h-1v-3c0-.55-.45-1-1-1H8v-2h2c.55 0 1-.45 1-1V7h2c1.1 0 2-.9 2-2v-.41c2.93 1.19 5 4.06 5 7.41 0 2.08-.8 3.97-2.1 5.39z"/></svg>',
            custom: '<svg width="24" height="24" fill="white" viewBox="0 0 24 24"><path d="M10 6H6a2 2 0 00-2 2v8a2 2 0 002 2h4v-2H6V8h4V6zM14 6v2h4v8h-4v2h4a2 2 0 002-2V8a2 2 0 00-2-2h-4zM12 11h-2v2h2v-2z"/></svg>'
          };
          
          return icons[channel.type] || icons.custom;
        }

        function escapeHtml(text) {
          if (!text) return '';
          return String(text)
            .replace(/&/g, '&amp;')
            .replace(/</g, '&lt;')
            .replace(/>/g, '&gt;')
            .replace(/"/g, '&quot;')
            .replace(/'/g, '&#039;');
        }

        function toggleMenu() {
          const button = document.getElementById('minimalist-main-button');
          const channelsList = document.getElementById('minimalist-channels-list');
          const tooltip = document.getElementById('minimalist-tooltip');
          
          if (!channelsList || !button) {
            console.error('Channels list or button not found');
            return;
          }
          
          isMenuOpen = !isMenuOpen;
          console.log('Toggling menu, new state:', isMenuOpen);
          
          if (isMenuOpen) {
            channelsList.classList.add('show');
            button.classList.add('active');
            if (tooltip) tooltip.classList.remove('show');
          } else {
            channelsList.classList.remove('show');
            button.classList.remove('active');
          }
        }

        function closeMenu() {
          const button = document.getElementById('minimalist-main-button');
          const channelsList = document.getElementById('minimalist-channels-list');
          if (channelsList && button) {
            channelsList.classList.remove('show');
            button.classList.remove('active');
            isMenuOpen = false;
          }
        }

        // Global channel opener
        window.openChannel = function(url) {
          console.log('Opening channel:', url);
          window.open(url, '_blank');
        };

        // Initialize when DOM is ready
        if (document.readyState === 'loading') {
          document.addEventListener('DOMContentLoaded', initWidget);
        } else {
          initWidget();
        }
      })();
    `
  };
}